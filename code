import streamlit as st
from PyPDF2 import PdfReader
from sumy.parsers.plaintext import PlaintextParser
from sumy.nlp.tokenizers import Tokenizer
from sumy.summarizers.text_rank import TextRankSummarizer

# Function to summarize text using TextRank
def summarize_text(text, num_sentences=5):
    parser = PlaintextParser.from_string(text, Tokenizer("english"))
    summarizer = TextRankSummarizer()
    summary = summarizer(parser.document, num_sentences)
    return " ".join([str(sentence) for sentence in summary])

# Function to split text into specified number of lines
def split_text_by_lines(text, num_lines=5):
    lines = text.split('\n')
    return '\n'.join(lines[:num_lines])

# Title of the app
st.title("PDF Summary Generator")

# File uploader widget
uploaded_file = st.file_uploader("Choose a PDF file", type="pdf")

# Number input widget for number of lines
num_lines = st.number_input("Number of lines in summary", min_value=1, max_value=100, value=5, step=1)

if uploaded_file is not None:
    # Read the PDF file
    pdf_reader = PdfReader(uploaded_file)
    full_text = ""

    # Extract text from all pages
    for page in pdf_reader.pages:
        text = page.extract_text()
        if text:
            full_text += text

    # Display extracted text (optional)
    st.write("Extracted text from the PDF:")
    st.text_area("Full Text", full_text, height=300)

    # Generate summary
    st.write("Generating summary...")
    summary = summarize_text(full_text, num_sentences=num_lines)

    # Split summary by specified number of lines
    summary_by_lines = split_text_by_lines(summary, num_lines)

    # Display the summary
    st.write("Summary of the PDF:")
    st.write(summary_by_lines)

# Provide additional instructions or information
st.write("Please upload a PDF file to see its summary.")
